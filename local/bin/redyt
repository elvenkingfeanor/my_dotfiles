#!/bin/sh

# args
while [ $# -gt 0 ]; do
	case $1 in
		-l|--limit)
			shift
			LIMIT=$1
			case $LIMIT in
				''|*[!0-9]*)
					echo 'limit is NaN'
					exit 1
			esac
			shift
			;;
		-f|--filter)
			FILTER=1
			shift
			;;
		-k|--keep)
			KEEP=1
			shift
			;;
		-v|--verbose)
			VERBOSE=1
			shift
			;;
		*)
			subreddit=$1
			shift
			;;
	esac
done

# Default config directory
configdir="${XDG_CONFIG_HOME:-$HOME/.config}/redyt"

# Create .config/redyt if it does not exist to prevent
# the program from not functioning properly
[ ! -d "$configdir" ] && echo "Directory $configdir does not exist, creating..." && mkdir -p "$configdir"

# Default subreddit that will be inserted in "subreddit.txt"
# if it does not exist
defaultsub="linuxmemes"

# If subreddit.txt does not exist, create it to prevent
# the program from not functioning properly
[ ! -f "$configdir/subreddit.txt" ] && echo "$defaultsub" >> "$configdir/subreddit.txt"

# If no argument is passed
if [ -z "$subreddit" ]; then
	# Ask the user to enter a subreddit
	subreddit=$(/usr/bin/fzf < "$configdir/subreddit.txt" | awk -F "|" '{print $1}')

	# If no subreddit was chosen, exit
	[ -z "$subreddit" ] && echo "no sub chosen" && exit 1
fi

# Default directory used to store the feed file and fetched images
cachedir="/tmp/redyt"

# If cachedir does not exist, create it
if [ ! -d "$cachedir" ]; then
	echo "$cachedir does not exist, creating..."
	mkdir -p "$cachedir"
fi

# Download the subreddit feed, containing only the
# first 100 entries (limit), and store it inside
# cachedir/tmp.json
curl -H "User-agent: 'your bot 0.1'" "https://www.reddit.com/r/$subreddit/hot.json?limit=${LIMIT:-100}" > "$cachedir/tmp.json"

# Create a list of images
imgs=$(jq '.' < "$cachedir/tmp.json" | grep url_overridden_by_dest | grep -Eo "http(s|)://.*(jpg|png|gif|mp4)\b" | sort -u)

# If there are no images, exit
[ -z "$imgs" ] && exit 1

# Download images to $cachedir
for img in $imgs; do
	if [ ! -e "$cachedir/${img##*/}" ]; then
		wget -P "$cachedir" $img
	fi
done
